openapi: 3.0.3
info:
  title: Movielab
  description: Тестовое задание на позицию Golang Backend разработчика в VK Tech
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/'
    description: Development server
tags:
  - name: open
    description: Open access
  - name: user
    description: User access
  - name: admin
    description: Admin access
paths:
  /auth/sign-in:
    post:
      description: Sign in to the app
      tags:
        - open
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        200:
          description: Sign in successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  token:
                    type: string
                    format: JWT
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/actors:
    get:
      description: Returns list of actors
      tags:
        - user
      security:
        - bearerAuth: [ ]
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: Returns list of actors
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  actors:
                    type: array
                    items:
                      $ref: '#/components/schemas/Actor'
        400:
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates new actor
      tags:
        - admin
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewActor'
      responses:
        200:
          description: Returns created actor
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  actor:
                    $ref: '#/components/schemas/Actor'
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/actors/{id}:
    get:
      description: Returns actor with given id
      tags:
        - user
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Returns actor with given id
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  actor:
                    $ref: '#/components/schemas/Actor'
        400:
          description: Invalid id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Actor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Updates actor with given id
      tags:
        - admin
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewActor'
      responses:
        200:
          description: Updates actor with given id
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  actor:
                    $ref: '#/components/schemas/Actor'
        400:
          description: Invalid id or request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Actor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Partially updates actor with given id
      tags:
        - admin
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/NewActor'
      responses:
        200:
          description: Partially updates actor with given id
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  actor:
                    $ref: '#/components/schemas/Actor'
        400:
          description: Invalid id or request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Actor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes actor with given id
      tags:
        - admin
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Actor deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        400:
          description: Invalid id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /api/movies:
    get:
      description: Returns list of movies
      tags:
        - user
      security:
        - bearerAuth: [ ]
      parameters:
        - in: query
          name: sort
          schema:
            type: string
            enum: [ '+title', '-title', '+date', '-date', '+rating', '-rating' ]
            default: -title
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: Returns list of movies
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  movies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Movie'
        400:
          description: Invalid query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates new movie
      tags:
        - admin
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMovie'
      responses:
        200:
          description: Returns created movie
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  movie:
                    $ref: '#/components/schemas/Movie'
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/movies/search:
    get:
      description: Returns list of movies with given query
      tags:
        - user
      security:
        - bearerAuth: [ ]
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
        - in: query
          name: title
          schema:
            type: string
        - in: query
          name: actor
          schema:
            type: string
      responses:
        200:
          description: Returns list of movies
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  movies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Movie'
        400:
          description: Invalid query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/movies/{id}:
    get:
      description: Returns movie with given id
      tags:
        - user
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Returns movie with given id
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  movie:
                    $ref: '#/components/schemas/Movie'
        400:
          description: Invalid query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Movie not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Updates movie with given id
      tags:
        - admin
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/NewMovie'
      responses:
        200:
          description: Updates movie with given id
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  movie:
                    $ref: '#/components/schemas/Movie'
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Movie not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Partially updates movie with given id
      tags:
        - admin
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/NewMovie'
      responses:
        200:
          description: Partially updates movie with given id
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  movie:
                    $ref: '#/components/schemas/Movie'
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Movie not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes movie with given id
      tags:
        - admin
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Movie deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:
  schemas:
    Movie:
      type: object
      required:
        - id
      allOf:
        - properties:
            id:
              type: integer
              format: int32
        - $ref: '#/components/schemas/NewMovie'
    NewMovie:
      type: object
      required:
        - title
        - release_date
        - rating
        - actor_ids
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 150
        description:
          type: string
          maxLength: 1000
        release_date:
          type: string
          format: date
        rating:
          type: number
          minimum: 0
          maximum: 10
        actor_ids:
          type: array
          items:
            type: integer
            format: int32
    Actor:
      allOf:
        - type: object
          required:
            - id
            - movie_ids
          properties:
            id:
              type: integer
              format: int32
            movie_ids:
              type: array
              items:
                type: integer
                format: int32
        - $ref: '#/components/schemas/NewActor'
    NewActor:
      type: object
      required:
        - name
        - sex
        - birth_date
      properties:
        name:
          type: string
        sex:
          type: string
          enum: [ male, female ]
        birth_date:
          type: string
          format: date
    Error:
      type: object
      required:
        - status
        - error
      properties:
        status:
          type: string
          enum: [ Error ]
        error:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT