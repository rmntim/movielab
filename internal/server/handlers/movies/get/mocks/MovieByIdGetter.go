// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import (
	entity "github.com/rmntim/movielab/internal/entity"

	mock "github.com/stretchr/testify/mock"
)

// MovieByIdGetter is an autogenerated mock type for the MovieByIdGetter type
type MovieByIdGetter struct {
	mock.Mock
}

// GetMovieById provides a mock function with given fields: id
func (_m *MovieByIdGetter) GetMovieById(id int) (*entity.Movie, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for GetMovieById")
	}

	var r0 *entity.Movie
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (*entity.Movie, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(int) *entity.Movie); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.Movie)
		}
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMovieByIdGetter creates a new instance of MovieByIdGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMovieByIdGetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MovieByIdGetter {
	mock := &MovieByIdGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
